apply plugin: eclipsebuild.BundlePlugin

dependencies {
    compile withEclipseBundle('org.eclipse.core.runtime')
    compile withEclipseBundle('org.eclipse.core.resources')
	compile withEclipseBundle('org.eclipse.xtext.xbase')
	compile withEclipseBundle('org.eclipse.emf.ecore.xcore.lib')
	compile files('lib/java-uuid-generator-3.1.3.jar')
	
	compile withEclipseBundle('org.eclipse.net4j.util')
	compile withEclipseBundle('org.eclipse.emf.cdo.common')
	compile withEclipseBundle('org.eclipse.emf.cdo')
	
	xtextLanguages withEclipseBundle('org.eclipse.emf.ecore.xcore')
	xtextLanguages withEclipseBundle('org.eclipse.emf.ecore.xcore.lib')
	xtextLanguages withEclipseBundle('org.eclipse.emf.codegen.ecore')
	xtextLanguages withEclipseBundle('org.eclipse.emf.codegen.ecore.xtext')
	xtextLanguages withEclipseBundle('org.eclipse.xtext.ecore')
	xtextLanguages files('lib/java-uuid-generator-3.1.3.jar')
	xtextLanguages withEclipseBundle('org.eclipse.net4j.util')
	xtextLanguages withEclipseBundle('org.eclipse.emf.cdo.common')
	xtextLanguages withEclipseBundle('org.eclipse.emf.cdo')
}

sourceSets {
	main {
		resources {
			exclude '**/*.xcore'
		}
	}
}

generateXtext.onlyIf { false }

xtext {
	version = "${xtextVersion}"
	languages {
		ecore {
			setup = 'org.eclipse.xtext.ecore.EcoreSupport'
		}
		codegen {
			setup = 'org.eclipse.emf.codegen.ecore.xtext.GenModelSupport'
		}
		xcore {
			setup = 'org.eclipse.emf.ecore.xcore.XcoreStandaloneSetup'
			generator.outlet.producesJava = true
		}
	}
}
