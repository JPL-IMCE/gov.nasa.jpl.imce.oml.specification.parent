@Ecore(nsPrefix="omle", nsURI="http://imce.jpl.nasa.gov/oml/extent")
@GenModel(copyrightText="
Copyright 2016 California Institute of Technology (\"Caltech\").
U.S. Government sponsorship acknowledged.

Licensed under the Apache License, Version 2.0 (the \"License\");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an \"AS IS\" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
", bundleManifest="false",
   childCreationExtenders="true",
   complianceLevel="8.0",
   featureDelegation="None",
   modelPluginVariables="org.eclipse.xtext.xbase.lib org.eclipse.emf.ecore.xcore.lib org.eclipse.emf.cdo",
   rootExtendsClass="org.eclipse.emf.internal.cdo.CDOObjectImpl",
   rootExtendsInterface="org.eclipse.emf.cdo.CDOObject",
   modelDirectory="jpl.imce.oml.specification.ecore/src-gen", 
   modelName="OMLE")
  
// If commented, it is possible to build cleanly with 'gradle :generateXtext'
// If uncommented, 'gradle :generateXtext' will have several java.io.IOExceptions like these:
// The path '.../plugin.properties' is unmapped
// The path '.../build.properties' is unmapped
// The path '.../plugin.xml' is unmapped
// @GenModel(modelPluginID="jpl.imce.oml.specification.ecore")
 
package gov.nasa.jpl.imce.oml.extents

import gov.nasa.jpl.imce.oml.bundles.Bundle
import gov.nasa.jpl.imce.oml.common.AnnotationProperty
import gov.nasa.jpl.imce.oml.common.Collection
import gov.nasa.jpl.imce.oml.common.CopyConstructor
import gov.nasa.jpl.imce.oml.common.Glossary
import gov.nasa.jpl.imce.oml.common.NotSchema
import gov.nasa.jpl.imce.oml.descriptions.DescriptionBox
import gov.nasa.jpl.imce.oml.graphs.TerminologyGraph

/*
 * An OML TerminologyExtent defines an in-memory tuple
 * about each OML Module involved in modeling and reasoning about domain-specific
 * vocabularies and systems descriptions using such vocabularies:
 * - An OML TerminologyGraph for defining a vocabulary about a domain or a description of a system in a domain;
 * - An OML Bundle for aggregating OML TerminologyBox(es) for as modular [OWL2-DL Ontologies] for monotonic refinement and reasoning;
 * - An OML DescriptionBox for describing actual systems according to one or more domain-specific OML TerminologyBox vocabularies.
 */
@Glossary
@NotSchema
class TerminologyExtent {
	
	@CopyConstructor
	@Collection(kind="SortedSet")
	contains AnnotationProperty[] annotationProperties
	
	@CopyConstructor
	@Collection(kind="SortedSet")
	contains TerminologyGraph[] terminologyGraphs opposite graphExtent
	
	@CopyConstructor
	@Collection(kind="SortedSet")
	contains Bundle[] bundles opposite bundleExtent
	
	@CopyConstructor
	@Collection(kind="SortedSet")
	contains DescriptionBox[] descriptions opposite descriptionExtent
}