apply plugin: eclipsebuild.BundlePlugin

dependencies {
	// This does not work because 'org.junit' returns a jar 
	// that contains junit.jar which is the real dependency we need...
	//testCompile withEclipseBundle('org.junit')
	
	// This works by resolving it from maven central..
	testCompile 'junit:junit:4.12'
	
	compile project(':jpl.imce.oml.specification.ecore')
	testCompile project(':jpl.imce.oml.specification')
	testCompile withEclipseBundle('org.eclipse.xtext.testing')
	
	//testCompile withEclipseBundle('com.itemis.xtext.testing')
}

configurations {
	compile.transitive = true
	testCompile.transitive = true
}

sourceSets {
	main {
		output.classesDir = 'build/target/classes/main/'
		java.srcDirs = []
		resources.srcDirs = []
	}
	test {
		output.classesDir = 'build/target/classes/test/'
		java.srcDirs = ['src', 'src-gen']
		resources.srcDirs = ['resources', 'src', 'src-gen']
		xtendOutputDir = 'xtend-gen'
	}
}
//this is an eclipse plugin project
eclipseClasspath.enabled=false
cleanEclipseClasspath.enabled=false
