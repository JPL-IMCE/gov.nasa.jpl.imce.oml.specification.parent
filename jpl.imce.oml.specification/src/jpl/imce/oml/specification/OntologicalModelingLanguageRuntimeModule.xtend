/*
 * generated by Xtext 2.10.0
 */
package jpl.imce.oml.specification

import jpl.imce.oml.specification.linking.OWLLinkingService
import jpl.imce.oml.specification.scoping.OMLImportedNamespaceAwareLocalScopeProvider
import jpl.imce.oml.specification.util.OMLQualifiedNameConverter
import jpl.imce.oml.specification.util.OMLQualifiedNameProvider
import jpl.imce.oml.specification.util.OMLValueConverterService
import org.eclipse.xtext.conversion.IValueConverterService
import org.eclipse.xtext.linking.ILinkingService
import org.eclipse.xtext.naming.IQualifiedNameConverter
import org.eclipse.xtext.naming.IQualifiedNameProvider
import org.eclipse.xtext.scoping.IScopeProvider

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 */
class OntologicalModelingLanguageRuntimeModule extends AbstractOntologicalModelingLanguageRuntimeModule {
	
	override def Class<? extends ILinkingService> bindILinkingService() {
		OWLLinkingService
	}
	
	override def Class<? extends IScopeProvider> bindIScopeProvider() {
		OMLImportedNamespaceAwareLocalScopeProvider
	}
	
    override def Class<? extends IValueConverterService> bindIValueConverterService() {
        OMLValueConverterService
    }

    override def Class<? extends IQualifiedNameProvider> bindIQualifiedNameProvider() {
        OMLQualifiedNameProvider
    }

	def Class<? extends IQualifiedNameConverter> bindIQualifiedNameConverter() {
	    OMLQualifiedNameConverter
	}
}
