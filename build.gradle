// Adapted from https://github.com/eclipse/buildship/blob/master/build.gradle

import eclipsebuild.*
import org.gradle.internal.os.OperatingSystem
import java.util.regex.*

buildscript {
	repositories {
		jcenter()
		maven {
		  url "https://plugins.gradle.org/m2/"
		}
		ivy {
			// See http://download.eclipse.org/eclipse/downloads/
			// This is 4.6.2 (Neon.2)
			url "https://repo.gradle.org/gradle/tooling-libs-releases-local/com/gradleware/tooling/p2-repository/0.17.0/p2-repository-0.17.0.zip!/"
			layout "pattern", { artifact "[organization]/[artifact]_[revision].[ext]" }
		}
	}
	dependencies {
		classpath 'org.xtext:xtext-gradle-plugin:1.0.2'
		classpath 'org.xtext:xtext-idea-gradle-plugin:1.0.2'
		classpath 'plugins:com.gradleware.tooling.model:0.17.0.v20170103170240'
	}
}

plugins {
    id 'com.gradle.build-scan' version '1.1.1'
}

buildScan {
    server = "https://e.grdev.net"
}

apply plugin: eclipsebuild.BuildDefinitionPlugin

ext.toolingCommonsBundleVersion = toolingCommonsVersion
ext.toolingApiBundleVersion = toolingApiVersion

// define version mapping for the 3rd-party dependencies that are not specific to a particular Eclipse version
def eclipseVersionAgnosticDependencies = [
    'com.gradleware.tooling.utils'      : toolingCommonsBundleVersion,
    'com.gradleware.tooling.client'     : toolingCommonsBundleVersion,
    'com.gradleware.tooling.model'      : toolingCommonsBundleVersion,
    'org.gradle.toolingapi'             : toolingApiBundleVersion,
    'org.slf4j.api'                     : '1.7.2',
    'org.slf4j.simple'                  : '1.7.2',
    'com.google.guava'                  : '15.0.0',
    'com.google.gson'                   : '2.2.4',
    'org.junit'                         : '4.11.0',
    'org.apache.log4j'                  : '1.2.15',
    'org.eclipse.swtbot.eclipse.finder' : '2.2.1',
    'org.eclipse.swtbot.junit4_x'       : '2.2.1',
]


// To avoid complication with legacy versions, use 46 as the minimum version.
// The version can be overridden through -Peclipse.version=<version>
// also the target platforms contain 
// 1) the Eclipse SDK
// 2) the latest junit 
// 3) SWTBot 2.2.1
eclipseBuild {
    defaultEclipseVersion = '46'

    final def swtPluginId = "org.eclipse.swt.${ECLIPSE_WS}.${ECLIPSE_OS}.${ECLIPSE_ARCH}"

    targetPlatform {
        eclipseVersion = '46'
        targetDefinition = file('tooling-e46.target')
        // TODO define version mapping similarly as above; it makes dependency resolution faster
        versionMapping = eclipseVersionAgnosticDependencies
    }
}

// read the current version from an external file and add a timestamp suffix if requested by the caller
//ext.baseVersion = file('version.txt').text.trim()
//version = getVersion(baseVersion)
version = file('version.txt').text.trim()

// read xtext version from an external file
ext.xtextVersion = file('xtextVersion.txt').text.trim()

// ensure that the assembleTargetPlatform is executed when the gradle.properties file is changed
project.assembleTargetPlatform.inputs.file file('gradle.properties')


subprojects { subproject ->
    if (!subproject.name.endsWith("feature") && !subproject.name.endsWith("repository") && !subproject.name.endsWith("target")) {
        apply plugin: 'org.xtext.xtend'
    }
}

subprojects {

    // set the calculated version on all projects in the hierarchy
    version = rootProject.version
    
	ext.xtextVersion = rootProject.xtextVersion

	apply plugin: 'java'
	apply from: "${rootDir}/gradle/source-layout.gradle"
	apply from: "${rootDir}/gradle/maven-deployment.gradle"
	apply plugin: 'eclipse'
	apply plugin: 'idea'
	apply plugin: 'maven'
	
	group = 'jpl.imce.oml.specification'
	version = '0.2.0'
	
	sourceCompatibility = '1.8'
	targetCompatibility = '1.8'
	
	configurations.all {
		exclude group: 'asm'
	}
	
    repositories {
        mavenCentral()
        jcenter()
		ivy {
			// See http://download.eclipse.org/eclipse/downloads/
			// This is 4.6.2 (Neon.2)
			url "https://repo.gradle.org/gradle/tooling-libs-releases-local/com/gradleware/tooling/p2-repository/0.17.0/p2-repository-0.17.0.zip!/"
			layout "pattern", { artifact "[organization]/[artifact]_[revision].[ext]" }
		}
		
		ivy {
			// See http://download.eclipse.org/eclipse/downloads/
			// This is 4.6.2 (Neon.2)
			url "https://repo.gradle.org/gradle/tooling-libs-releases-local/com/gradleware/tooling/p2-repository/0.17.0/p2-repository-0.17.0.zip!/plugins/"
			layout "pattern", { artifact "[artifact]_[revision].[ext]" }
		}
		ivy {
			// See http://download.eclipse.org/eclipse/downloads/
			// This is 4.6.2 (Neon.2)
			url "http://download.eclipse.org/eclipse/updates/4.6/R-4.6.2-201611241400/plugins/"
			layout "pattern", { artifact "[artifact]_[revision].[ext]" }
		}
		
		ivy {
			// See http://download.eclipse.org/modeling/emf/
			// Unfortunately, it is not obvious how to get a useful URL for IVY-based resolution for EMF.
			// 
			// Here's the workaround used for this project:
			// - Look for the version-specific release timestamp of EMF needed:
			//   http://download.eclipse.org/modeling/emf/emf/downloads/drops/?d
			// 
			//   For example, for the 2.12 version, the latest 2016 release timestamp is R201605260356
			//   Unfortunately, the EMF download page only provides links for the ZIPs:
			//   e.g.: http://download.eclipse.org/modeling/emf/emf/downloads/drops/2.12.0/R201605260356/?d
			// 
			// - For IVY-based resolution, replace 'downloads' with 'updates' in the drop zip URL as shown below:
			url "http://download.eclipse.org/modeling/emf/emf/updates/2.12/core/R201605260356/plugins/"
			layout "pattern", { artifact "[artifact]_[revision].[ext]" }
		}
		
		ivy {
			// https://www.eclipse.org/cdo/downloads/
			// This is 4.5 (R20160607-1209)
			// For coordinates, use 'plugins:<plugin name>:<plugin version>'
			url "http://download.eclipse.org/modeling/emf/cdo/drops/R20160607-1209/plugins/"
			layout "pattern", { artifact "[artifact]_[revision].[ext]" }
		}
		
    }
    
    eclipse {
	    classpath {
	       downloadSources=true
	       downloadJavadoc=true
	    }
	}
}
